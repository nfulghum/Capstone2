[{"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/index.js":"1","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/reportWebVitals.js":"2","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/App.js":"3","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/api.js":"4","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/routes/AppRoutes.js":"5","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/hooks/useLocalStorage.js":"6","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/Navigation.js":"7","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/LoadingSpinner.js":"8","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Auth/UserContext.js":"9","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/routes/ProtectedRoute.js":"10","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Auth/Login.js":"11","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/Home.js":"12","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Auth/Signup.js":"13","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Exercise/Exercise.js":"14","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Meal/Meal.js":"15","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/User/EditProfile.js":"16","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/User/Profile.js":"17","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/AppFooter.js":"18","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Meal/MealCard.js":"19","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Product/ProductHowItWorks.js":"20","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Exercise/ExerciseCard.js":"21","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Product/ProductHero.js":"22","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Product/ProductValues.js":"23","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Exercise/ExerciseInfo.js":"24","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Meal/MealInfo.js":"25"},{"size":513,"mtime":1678232332970,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1678232332970,"results":"28","hashOfConfig":"27"},{"size":2483,"mtime":1681490997015,"results":"29","hashOfConfig":"27"},{"size":1919,"mtime":1681421408892,"results":"30","hashOfConfig":"27"},{"size":1245,"mtime":1678232332970,"results":"31","hashOfConfig":"27"},{"size":494,"mtime":1678232332970,"results":"32","hashOfConfig":"27"},{"size":1941,"mtime":1678232332970,"results":"33","hashOfConfig":"27"},{"size":190,"mtime":1678232332970,"results":"34","hashOfConfig":"27"},{"size":99,"mtime":1678232332968,"results":"35","hashOfConfig":"27"},{"size":436,"mtime":1678243687078,"results":"36","hashOfConfig":"27"},{"size":3156,"mtime":1678232332968,"results":"37","hashOfConfig":"27"},{"size":451,"mtime":1678232332970,"results":"38","hashOfConfig":"27"},{"size":5502,"mtime":1678232332968,"results":"39","hashOfConfig":"27"},{"size":6331,"mtime":1678232332969,"results":"40","hashOfConfig":"27"},{"size":4442,"mtime":1678232332969,"results":"41","hashOfConfig":"27"},{"size":5650,"mtime":1678232332969,"results":"42","hashOfConfig":"27"},{"size":162,"mtime":1678232332969,"results":"43","hashOfConfig":"27"},{"size":1182,"mtime":1678232332969,"results":"44","hashOfConfig":"27"},{"size":1778,"mtime":1681400004355,"results":"45","hashOfConfig":"27"},{"size":3668,"mtime":1678232332969,"results":"46","hashOfConfig":"27"},{"size":390,"mtime":1678232332969,"results":"47","hashOfConfig":"27"},{"size":1290,"mtime":1678232332969,"results":"48","hashOfConfig":"27"},{"size":4001,"mtime":1678232332969,"results":"49","hashOfConfig":"27"},{"size":2231,"mtime":1678232332969,"results":"50","hashOfConfig":"27"},{"size":1229,"mtime":1678232332969,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ljjpbp",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/index.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/reportWebVitals.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/App.js",["132","133","134"],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/api.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/routes/AppRoutes.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/hooks/useLocalStorage.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/Navigation.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/LoadingSpinner.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Auth/UserContext.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/routes/ProtectedRoute.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Auth/Login.js",["135"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Link,\n    Grid,\n    Box,\n    Typography,\n    Container\n} from '@mui/material';\n\n\nconst Login = ({ login }) => {\n\n    const navigate = useNavigate();\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        let result = await login(formData);\n        if (result.success) {\n            navigate('/');\n        } else {\n            setFormErrors(result.errors);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(data => ({ ...data, [name]: value }));\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 40,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Typography component=\"h1\" variant=\"h5\" color='#DD5F18'>\n                    Sign in\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Box noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            value={formData.username}\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={formData.password}\n                            onChange={handleChange}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            style={{ background: '#093D65' }}\n                        >\n                            Login\n                        </Button>\n                        <Grid item>\n                            <Link href=\"signup\" variant=\"body2\" color='#DD5F18'>\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Box>\n                </form>\n            </Box>\n        </Container>\n    )\n}\n\nexport default Login;","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/Home.js",["136"],[],"import React, { useContext } from 'react';\nimport ProductHero from '../Product/ProductHero';\nimport ProductValues from '../Product/ProductValues';\nimport ProductHowItWorks from '../Product/ProductHowItWorks';\nimport AppFooter from './AppFooter';\n\nconst Home = () => {\n    return (\n        <>\n            <ProductHero />\n            <ProductValues />\n            <ProductHowItWorks />\n            <AppFooter />\n        </>\n    )\n}\n\nexport default Home;","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Auth/Signup.js",["137"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    TextField,\n    Link,\n    Grid,\n    Box,\n    Typography,\n    Container,\n    CssBaseline\n} from '@mui/material';\n\nconst Signup = ({ signup }) => {\n    const navigate = useNavigate();\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n    })\n\n    const [formErros, setFormErrors] = useState([]);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        let result = await signup(formData);\n        if (result.success) {\n            navigate('/');\n        } else {\n            setFormErrors(result.errors)\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(data => ({ ...data, [name]: value }));\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 30,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                <Typography component='h1' variant='h5' color='#DD5F18'>\n                    Sign Up\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Box noValidate sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"firstName\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"family-name\"\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    autoComplete=\"username\"\n                                    value={formData.username}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            onSubmit={handleSubmit}\n                            sx={{ mt: 3, mb: 2 }}\n                            style={{ background: '#093D65' }}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"login\" variant=\"body2\" color='#DD5F18'>\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </form>\n            </Box>\n        </Container>\n    )\n}\n\nexport default Signup;","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Exercise/Exercise.js",["138"],[],"import React, { useState } from 'react';\nimport ExerciseCard from './ExerciseCard';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Box,\n    Typography,\n    Container,\n    CssBaseline,\n    MenuItem,\n    Menu,\n} from '@mui/material';\nimport ResolutionApi from '../../api';\n\n\nconst Exercise = () => {\n\n    const [exerciseData, setExerciseData] = useState(null);\n    const [formData, setFormData] = useState({\n        name: \"\",\n        type: \"\",\n        muscle: \"\",\n        difficulty: \"\",\n    })\n\n    const types = [\n        { value: \"cardio\", label: \"Cardio\" }, { value: \"olympic_weightlifting\", label: \"Olympic Weightlifting\" }, { value: \"plyometics\", label: \"Plyometrics\" }, { value: \"powerlifting\", label: \"Powerlifting\" },\n        { value: \"strength\", label: \"Strength\" }, { value: \"stretching\", label: \"Stretching\" }, { value: \"strongman\", label: \"Strongman\" },\n    ]\n\n    const muscles = [\n        { value: \"abdominals\", label: \"Abdominals\" }, { value: \"abductors\", label: \"Abductors\" }, { value: \"adductors\", label: \"Adductors\" }, { value: \"biceps\", label: \"Biceps\" }, { value: \"calves\", label: \"Calves\" },\n        { value: \"chest\", label: \"Chest\" }, { value: \"forearms\", label: \"Forearms\" }, { value: \"glutes\", label: \"Glutes\" }, { value: \"hamstrings\", label: \"Hamstrings\" }, { value: \"lats\", label: \"Lats\" },\n        { value: \"lower_back\", label: \"Lower Back\" }, { value: \"middle_back\", label: \"Middle Back\" }, { value: \"neck\", label: \"Neck\" }, { value: \"quadriceps\", label: \"Quadriceps\" }, { value: \"traps\", label: \"Traps\" }, { value: \"triceps\", label: \"Triceps\" },\n    ]\n\n    const difficulty = [\n        { value: \"beginner\", label: \"Beginner\" }, { value: \"intermediate\", label: \"Intermediate\" }, { value: \"expert\", label: \"Expert\" },\n    ]\n\n    async function getExercise(e) {\n        e.preventDefault();\n        let exerciseData = await ResolutionApi.getExerciseData(formData);\n        setExerciseData(exerciseData)\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(data => ({ ...data, [name]: value }));\n    }\n\n\n    return (\n        <Container component='main' maxWidth='xs' sx={{ marginBottom: 10 }}>\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 30,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                <Typography component='h1' variant='h5' color='#DD5F18'>\n                    Find Exercise\n                </Typography>\n                <form onSubmit={getExercise}>\n                    <Box noValidate sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"name\"\n                                    fullWidth\n                                    id=\"name\"\n                                    label=\"Exercise Name\"\n                                    autoFocuselect\n                                    value={formData.name}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"type\"\n                                    label=\"Type\"\n                                    name=\"type\"\n                                    select\n                                    onChange={handleChange}\n                                >\n                                    {types.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    id=\"muscle\"\n                                    label=\"Muscle\"\n                                    name=\"muscle\"\n                                    select\n                                    onChange={handleChange}\n                                >\n                                    {muscles.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    id=\"difficulty\"\n                                    label=\"Difficulty\"\n                                    name=\"difficulty\"\n                                    select\n                                    onChange={handleChange}\n                                >\n                                    {difficulty.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            onSubmit={getExercise}\n                            sx={{ mt: 3, mb: 2 }}\n                            style={{ background: '#093D65' }}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </form>\n            </Box>\n            {exerciseData && <ExerciseCard exerciseData={exerciseData} />}\n        </Container>\n    )\n}\n\nexport default Exercise;","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Meal/Meal.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/User/EditProfile.js",["139"],[],"import React, { useState, useContext } from 'react';\nimport ResolutionApi from '../../api';\nimport UserContext from '../Auth/UserContext';\nimport { Button, CssBaseline, TextField, Grid, Box, Typography, Container } from '@mui/material';\n\nconst EditProfile = () => {\n    const { currentUser, setCurrentUser } = useContext(UserContext);\n    const [formData, setFormData] = useState({\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        email: currentUser.email,\n        username: currentUser.username,\n        password: \"\",\n    });\n    const [formErros, setFormErrors] = useState([]);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        let profileDate = {\n            firstName: formData.firstName,\n            lastName: formData.lastName,\n            email: formData.email,\n            password: formData.password,\n        };\n\n        let username = formData.username;\n        let updatedUser;\n\n        try {\n            updatedUser = await ResolutionApi.saveProfile(username, profileDate);\n        } catch (e) {\n            debugger;\n            setFormErrors(e);\n            return;\n        }\n\n        setFormData(f => ({ ...f, password: \"\" }));\n        setFormErrors([]);\n        setCurrentUser(updatedUser);\n    }\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setFormData(f => ({ ...f, [name]: value, }));\n        setFormErrors([]);\n    }\n\n\n\n    return (\n\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 30,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Typography component=\"h1\" variant=\"h5\">\n                    Profile\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Box noValidate sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"firstName\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"family-name\"\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    autoComplete=\"username\"\n                                    value={formData.username}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Confirm password to save changes\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            onSubmit={handleSubmit}\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Save Changes\n                        </Button>\n                    </Box>\n                </form>\n            </Box>\n        </Container>\n    )\n}\n\nexport default EditProfile;","/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/User/Profile.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/interface/AppFooter.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Meal/MealCard.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Product/ProductHowItWorks.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Exercise/ExerciseCard.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Product/ProductHero.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Product/ProductValues.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Exercise/ExerciseInfo.js",[],[],"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/components/Meal/MealInfo.js",[],[],{"ruleId":"140","severity":1,"message":"141","line":79,"column":20,"nodeType":"142","messageId":"143","endLine":81,"endColumn":7},{"ruleId":"140","severity":1,"message":"141","line":81,"column":69,"nodeType":"142","messageId":"143","endLine":83,"endColumn":9},{"ruleId":"140","severity":1,"message":"141","line":83,"column":39,"nodeType":"142","messageId":"143","endLine":85,"endColumn":9},{"ruleId":"144","severity":1,"message":"145","line":22,"column":12,"nodeType":"146","messageId":"147","endLine":22,"endColumn":22},{"ruleId":"144","severity":1,"message":"148","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":27},{"ruleId":"144","severity":1,"message":"149","line":24,"column":12,"nodeType":"146","messageId":"147","endLine":24,"endColumn":21},{"ruleId":"144","severity":1,"message":"150","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":12,"endColumn":9},{"ruleId":"144","severity":1,"message":"149","line":15,"column":12,"nodeType":"146","messageId":"147","endLine":15,"endColumn":21},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","no-unused-vars","'formErrors' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'formErros' is assigned a value but never used.","'Menu' is defined but never used."]