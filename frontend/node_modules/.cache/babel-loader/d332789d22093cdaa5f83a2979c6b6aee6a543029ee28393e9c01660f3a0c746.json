{"ast":null,"code":"var _jsxFileName = \"/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserContext from './components/Auth/UserContext';\nimport ResolutionApi from './api';\nimport LoadingSpinner from './components/interface/LoadingSpinner';\nimport jwt_decode from 'jwt-decode';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport AppRoutes from './routes/AppRoutes';\nimport Navigation from './components/interface/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOKEN_STORAGE_ID = 'resolution-token';\nfunction App() {\n  _s();\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [mealIds, setMealIds] = useState(new Set([]));\n  console.debug(\"App\", \"infoLoaded=\", infoLoaded, \"currentUser=\", currentUser, \"token=\", token);\n  useEffect(function loadUserInfo() {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt_decode(token);\n          ResolutionApi.token = token;\n          let currentUser = await ResolutionApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          setMealIds(new Set(currentUser.meals));\n        } catch (e) {\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n  const logout = () => {\n    setCurrentUser(null);\n    setToken(null);\n  };\n  async function signup(signupData) {\n    try {\n      let token = await ResolutionApi.signup(signupData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (e) {\n      console.error(\"signup failed\", e);\n      return {\n        success: false,\n        e\n      };\n    }\n  }\n  ;\n  async function login(loginData) {\n    try {\n      let token = await ResolutionApi.login(loginData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (e) {\n      return {\n        success: false,\n        e\n      };\n    }\n  }\n  ;\n  const hasSavedMealPlan = mealData => {\n    return mealIds.has(mealData);\n  };\n  const saveMealPlan = mealData => {\n    if (hasSavedMealPlan(mealData)) return;\n    ResolutionApi.saveMealPlan(currentUser.username, mealData.meal, mealData.nutrients);\n    setMealIds(new Set([...mealIds, mealData.meal]));\n  };\n  if (!infoLoaded) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        currentUser,\n        setCurrentUser,\n        hasSavedMealPlan,\n        saveMealPlan\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppRoutes, {\n        login: login,\n        signup: signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u5ezpvHIsY3Ts8EH7xMZlRkN3fY=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","UserContext","ResolutionApi","LoadingSpinner","jwt_decode","useLocalStorage","AppRoutes","Navigation","TOKEN_STORAGE_ID","App","infoLoaded","setInfoLoaded","currentUser","setCurrentUser","token","setToken","mealIds","setMealIds","Set","console","debug","loadUserInfo","getCurrentUser","username","meals","e","logout","signup","signupData","success","error","login","loginData","hasSavedMealPlan","mealData","has","saveMealPlan","meal","nutrients"],"sources":["/Users/nick/Documents/SpringBoard_SWE/Capstone2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserContext from './components/Auth/UserContext';\nimport ResolutionApi from './api';\nimport LoadingSpinner from './components/interface/LoadingSpinner';\nimport jwt_decode from 'jwt-decode';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport AppRoutes from './routes/AppRoutes';\nimport Navigation from './components/interface/Navigation';\n\nexport const TOKEN_STORAGE_ID = 'resolution-token';\n\n\n\nfunction App() {\n\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [mealIds, setMealIds] = useState(new Set([]));\n\n\n  console.debug(\n    \"App\",\n    \"infoLoaded=\", infoLoaded,\n    \"currentUser=\", currentUser,\n    \"token=\", token,\n  );\n\n  useEffect(function loadUserInfo() {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt_decode(token);\n          ResolutionApi.token = token;\n          let currentUser = await ResolutionApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          setMealIds(new Set(currentUser.meals));\n        } catch (e) {\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  const logout = () => {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  async function signup(signupData) {\n    try {\n      let token = await ResolutionApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (e) {\n      console.error(\"signup failed\", e)\n      return { success: false, e };\n    }\n  };\n\n  async function login(loginData) {\n    try {\n      let token = await ResolutionApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (e) {\n      return { success: false, e };\n    }\n  };\n\n  const hasSavedMealPlan = (mealData) => {\n    return mealIds.has(mealData);\n  };\n\n  const saveMealPlan = (mealData) => {\n    if (hasSavedMealPlan(mealData)) return;\n    ResolutionApi.saveMealPlan(currentUser.username, mealData.meal, mealData.nutrients);\n    setMealIds(new Set([...mealIds, mealData.meal]));\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />\n\n  return (\n\n    <BrowserRouter>\n      <UserContext.Provider value={{ currentUser, setCurrentUser, hasSavedMealPlan, saveMealPlan }}>\n        <Navigation logout={logout} />\n        <AppRoutes login={login} signup={signup} />\n      </UserContext.Provider>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}